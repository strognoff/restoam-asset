buildscript {
    ext {
        springBootVersion = '2.7.5'
        kotlinVersion = '1.8.21' // Update to the latest Kotlin version
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

jar {
    archiveBaseName.set('restoam-asset') // Use archiveBaseName instead of baseName
    archiveVersion.set('0.0.5-SNAPSHOT') // Use archiveVersion for the version
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "15"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "15"
    }
}

sourceCompatibility = 15
def mockitoVersion = '2.23.4'
def junitVersion = '5.3.1'

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}


dependencies {
    // Spring Boot Starter Web for Spring MVC and web annotations
    implementation('org.springframework.boot:spring-boot-starter-web')

    // Spring Boot Starter Data JPA for database access
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')

    // PostgreSQL driver (or your database driver)
    runtimeOnly('org.postgresql:postgresql')

    // Kotlin dependencies (if applicable)
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    implementation("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")

    // JUnit 5 for testing
    testImplementation('org.junit.jupiter:junit-jupiter:5.9.3')

    // Mockito for mocking in tests
    testImplementation('org.mockito:mockito-core:4.11.0')
}

test {
    useJUnitPlatform()
}